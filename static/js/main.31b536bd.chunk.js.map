{"version":3,"sources":["Game.js","BoardComponents.js","Board.js","Lobby.js","Header.js","App.js","serviceWorker.js","index.js"],"names":["DEFAULT_TROOP_DECK","TROOP_DECK_COLORS","TROOP_DECK_VALUES","VALUE_MAP","Map","VALUE_MAP_REVERSE","TACTICS_VALUE_MAP","FORMATION_STRENGTH_MAP","i","j","card","push","DEFAULT_TACTICS_DECK","BattleLine","name","setup","troop_deck","slice","tactics_deck","unseen_cards","board_cards","Array","fill","discards","flag_statuses","flag_tiebreakers","shuffle_array","player_hands","pop","seen_cards","tactics_played","leaders_played","scout_state","minPlayers","maxPlayers","moves","playCard","G","ctx","flag","displaced_card","arguments","length","undefined","card_str","currentPlayer","numMoves","INVALID_MOVE","isTroopCard","isTacticsCard","splice","events","endTurn","isMoraleTacticsCard","isDisplacementCard","required_cards","flagHasMud","countFormationCards","isLeaderTacticsCard","displaced_card_str","isFormationCard","isScoutCard","num_draw","Math","min","formations","getFormations","getOpponentID","ind","indexOf","claimFlag","move","has_fog","flagHasFog","has_mud","formation","formation_opp","tiebreaker","formation_strength","sum_value","sumValue","flush_value","flushValue","straight_value","straightValue","set_value","setValue","formationStrength","formation_strength_opp","pot","potentialStraightFlush","formation_new","unseen_cards_new","potentialSet","potentialFlush","potentialStraight","potentialSum","potentialFormationStrength","formation_strength1","formation_strength2","get","formationStrengthComparison","isStrongestFormation","noLimit","drawCard","deck","client","passTurn","canPassTurn","playerView","playerID","troop_deck_stripped","tactics_deck_stripped","player_hands_stripped","parseInt","opp_hand_stripped","stripSecrets","endIf","player_id","count","count_consecutive","IsVictory","winner","color","val","vals","str_orig","highest_value","highest","diff","abs","max_diff","straightValueAux","values","Set","setIntersection","size","next","value","set1","set2","filter","x","has","sum","arr","k","floor","random","temp","hand","have_troop_card","canPlayTroopCard","canDisplaceCard","flag_id","COLOR_MAP","TACTICS_FORMAT_MAP","Card","React","Component","constructor","props","super","this","cardRefs","createRef","height","side","componentDidMount","updateCanvas","componentDidUpdate","current","getContext","clearRect","translate","selected","str","drawTroopCardFront","drawTacticsCardFront","drawCardOutline","fillStyle","fillRect","card_width","card_height","font","textAlign","fillText","drawTroopCardBack","drawTacticsCardBack","render","createElement","ref","width","Formation","formationRefs","cards","highlights","show_flag","drawFlag","Flag","flagRefs","highlight","lineHeight","measureText","padding","reduce_spacing","width_1","width_0","lineWidth","beginPath","moveTo","lineTo","stroke","rotate","PI","format","text","font_size","drawIcon","toString","corner_radius","fill_color","strokeStyle","arcTo","closePath","y_offset","img","document","getElementById","drawImage","y","b1","b2","p1","p2","p3","v1","v2","drawLeaderIcon","offset","drawCompanionCavalryIcon","drawShieldBearersIcon","p4","p5","p6","p7","drawTraitorIcon","drawDeserterIcon","drawRedeployIcon","pow","r","sqrt","alpha","atan","arc","drawScoutIcon","drawMudIcon","drawFogIcon","BattleLineBoard","selected_card","onClickCard","card_id","forceUpdate","onClickSlot","event","rect","target","getBoundingClientRect","bottom","clientY","top","n_cards","boundary_y","new_displaced_card","arraysEqual","onClickFlag","onClickDeck","deck_name","onClickPass","tbody","cells","text_display","gameover","key","style","onClick","rowSpan","id","margin","pass_display","type","display","arr1","arr2","BattleLineLobby","Lobby","handleChangeName","setState","playerName","handleNewMatch","_createMatch","handleRefreshMatches","_updateConnection","handleJoinMatch","matchID","_joinMatch","handleLeaveMatch","_leaveMatch","handleEnterLobby","_enterLobby","state","handleExitLobby","_exitLobby","handleStartMatch","_startMatch","numPlayers","handleExitMatch","_exitMatch","matches_thead","matches_th","match_id_col_style","player_name_col_style","vs_col_style","button_col_style","matches_tbody","connection","matches","matches_row","match","player1_name","players","player2_name","phase","onChange","board_element","runningMatch","app","credentials","Header","bgcolor","fontFamily","fontSize","href","textDecoration","src","alt","Client","game","board","multiplayer","SocketIO","server","App","gameServer","lobbyServer","gameComponents","Boolean","window","location","hostname","ReactDOM","StrictMode","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.31b536bd.chunk.js","sourcesContent":["import { INVALID_MOVE } from 'boardgame.io/core';\n\nvar DEFAULT_TROOP_DECK = [];\nvar TROOP_DECK_COLORS = [\"r\",\"o\",\"y\",\"g\",\"b\",\"p\"];\nvar TROOP_DECK_VALUES = [\"1\",\"2\",\"3\",\"4\",\"5\",\"6\",\"7\",\"8\",\"9\",\"T\"];\nvar VALUE_MAP = new Map([[\"1\",1],[\"2\",2],[\"3\",3],[\"4\",4],[\"5\",5],[\"6\",6],[\"7\",7],[\"8\",8],[\"9\",9],[\"T\",10]]);\nvar VALUE_MAP_REVERSE = new Map([[1,\"1\"],[2,\"2\"],[3,\"3\"],[4,\"4\"],[5,\"5\"],[6,\"6\"],[7,\"7\"],[8,\"8\"],[9,\"9\"],[10,\"T\"]]);\nvar TACTICS_VALUE_MAP = new Map([[\"ALX\", [10,9,8,7,6,5,4,3,2,1]],[\"DAR\", [10,9,8,7,6,5,4,3,2,1]],[\"CAV\", [8]], [\"321\", [3,2,1]]])\nvar FORMATION_STRENGTH_MAP = new Map([[\"straightflush\",5],[\"set\",4],[\"flush\",3],[\"straight\",2],[\"sum\",1],[\"incomplete\",0]]);\n\nfor(let i = 0; i !== 10; i++){\n  for(let j = 0; j !== 6; j++){\n    let card = TROOP_DECK_VALUES[i]+TROOP_DECK_COLORS[j];\n    DEFAULT_TROOP_DECK.push(card);\n  }\n}\nvar DEFAULT_TACTICS_DECK = [\"ALX\",\"DAR\",\"CAV\",\"321\",\"TRA\",\"DES\",\"RDP\",\"SCT\",\"FOG\",\"MUD\"];\n\nexport const BattleLine = {\n  name: \"battle-line\",\n  setup: () => {\n                let troop_deck = DEFAULT_TROOP_DECK.slice();\n                let tactics_deck = DEFAULT_TACTICS_DECK.slice();\n                let unseen_cards = DEFAULT_TROOP_DECK.slice();\n                let board_cards = new Array(9).fill(new Array(2).fill([]))\n                let discards = new Array(2).fill([])\n                let seen_cards = [];\n\n                let flag_statuses = new Array(9).fill(null);\n                let flag_tiebreakers = new Array(9).fill(null);\n                shuffle_array(troop_deck);\n                shuffle_array(tactics_deck);\n                let player_hands = [];\n                player_hands.push([]);\n                player_hands.push([]);\n                for(let i = 0; i !== 7; i++){\n                  for(let j = 0; j !== 2; j++){\n                    player_hands[j].push(troop_deck.pop()); \n                  }\n                }\n\n                return { troop_deck: troop_deck,\n                  tactics_deck: tactics_deck,\n                  player_hands: player_hands,\n                  board_cards: board_cards,\n                  discards: discards,\n                  unseen_cards: unseen_cards,\n                  seen_cards: seen_cards,\n                  flag_statuses: flag_statuses,\n                  flag_tiebreakers: flag_tiebreakers,\n                  tactics_played: [0,0],\n                  leaders_played: [0,0],\n                  scout_state: [0, 0] // to_draw, drawn\n                }},\n  minPlayers: 2,\n  maxPlayers: 2,\n  moves: {\n    playCard: (G, ctx, card, flag, displaced_card = null) => {\n      let card_str = G.player_hands[ctx.currentPlayer][card];\n      if (ctx.numMoves > 0 && G.scout_state[1] > 0 && G.scout_state[0] === 0){\n        if (flag !== -1){\n          return INVALID_MOVE;\n        }\n\n        if (isTroopCard(card_str)){\n          G.troop_deck.push(card_str);\n        }\n        else if (isTacticsCard(card_str)){\n          G.tactics_deck.push(card_str);\n        }\n        G.player_hands[ctx.currentPlayer].splice(card, 1);\n        G.scout_state[1] = G.scout_state[1] - 1;\n        if (G.scout_state[1] <= 1){\n          G.scout_state[0] = 0;\n          G.scout_state[1] = 0;\n          ctx.events.endTurn();\n        }\n        return;\n      }\n\n      if (ctx.numMoves > 0){\n        return INVALID_MOVE;\n      }\n      if (flag !== -1 && (isTroopCard(card_str) || isMoraleTacticsCard(card_str) || isDisplacementCard(card_str))){\n        let required_cards = flagHasMud(G.board_cards[flag]) ? 4:3;\n        if (countFormationCards(G.board_cards[flag][ctx.currentPlayer]) === required_cards){\n          return INVALID_MOVE;\n        }\n      }\n      if (flag !== -1 && G.flag_statuses[flag] !== null){\n        return INVALID_MOVE;\n      }\n      if (isTacticsCard(card_str)){\n        if (ctx.currentPlayer === '0' && G.tactics_played[0] > G.tactics_played[1]){\n          return INVALID_MOVE;\n        }\n        if (ctx.currentPlayer === '1' && G.tactics_played[1] > G.tactics_played[0]){\n          return INVALID_MOVE;\n        }\n      }\n      if (isLeaderTacticsCard(card_str) && G.leaders_played[ctx.currentPlayer] > 0){\n        return INVALID_MOVE;\n      }\n      if (isDisplacementCard(card_str)){\n        if (displaced_card === null){\n          return INVALID_MOVE;\n        }\n        if (G.flag_statuses[displaced_card[0]] !== null){\n          return INVALID_MOVE;\n        }\n        let displaced_card_str = G.board_cards[displaced_card[0]][displaced_card[1]][displaced_card[2]];\n        if (card_str === \"TRA\"){\n          if (displaced_card[1] === ctx.currentPlayer || isTacticsCard(displaced_card_str) || flag === -1){\n            return INVALID_MOVE;\n          }\n        }\n        else if (card_str === \"DES\"){\n          if (displaced_card[1] === ctx.currentPlayer || !isFormationCard(displaced_card_str) || flag !== -1){\n            return INVALID_MOVE;\n          }\n        }\n        else if(card_str === \"RDP\"){\n          if (displaced_card[1] !== ctx.currentPlayer || !isFormationCard(displaced_card_str) || flag === displaced_card[0]){\n            return INVALID_MOVE;\n          }\n        }\n      }\n      else if (isScoutCard(card_str)){\n        if (flag !== -1){\n          return INVALID_MOVE;\n        }\n        let num_draw = Math.min(3, G.troop_deck.length + G.tactics_deck.length);\n        G.scout_state = [num_draw, 0];\n      }\n      else if (flag === -1){\n        return INVALID_MOVE;\n      }\n\n      if (isDisplacementCard(card_str)){\n        let displaced_card_str = G.board_cards[displaced_card[0]][displaced_card[1]][displaced_card[2]];\n        G.board_cards[displaced_card[0]][displaced_card[1]].splice(displaced_card[2], 1);\n        if (flag !== -1){\n          G.board_cards[flag][ctx.currentPlayer].push(displaced_card_str);\n        }\n        else{\n          G.discards[displaced_card[1]].push(displaced_card_str);\n        }\n        G.discards[ctx.currentPlayer].push(card_str);\n        if (G.flag_tiebreakers[displaced_card[0]] === displaced_card[1]){\n          G.flag_tiebreakers[displaced_card[0]] = null;\n        }\n      }\n      else if (isScoutCard(card_str)){\n        G.discards[ctx.currentPlayer].push(card_str);\n      }\n      else{\n        G.board_cards[flag][ctx.currentPlayer].push(card_str);\n        if (card_str === \"MUD\"){\n          G.flag_tiebreakers[flag] = null;\n        }\n      }\n\n      if (flag !== -1){\n        let has_mud = flagHasMud(G.board_cards[flag]);\n        var formations = getFormations(flag, ctx.currentPlayer, G.board_cards);\n        let required_cards = has_mud ? 4:3;\n        if (formations[0].length === required_cards && G.flag_tiebreakers[flag] === null){\n          G.flag_tiebreakers[flag] = ctx.currentPlayer;\n        }\n      }\n      if (displaced_card !== null){\n        let has_mud = flagHasMud(G.board_cards[displaced_card[0]]);\n        var formations = getFormations(displaced_card[0], ctx.currentPlayer, G.board_cards);\n        let required_cards = has_mud ? 4:3;\n        if (formations[0].length === required_cards && G.flag_tiebreakers[displaced_card[0]] === null){\n          G.flag_tiebreakers[displaced_card[0]] = ctx.currentPlayer;\n        }\n        else if (formations[1].length === required_cards && G.flag_tiebreakers[displaced_card[0]] === null){\n          G.flag_tiebreakers[displaced_card[0]] = getOpponentID(ctx.currentPlayer);\n        }\n      }\n\n      G.seen_cards.push(card_str);\n      if (isTacticsCard(card_str)){\n        G.tactics_played[ctx.currentPlayer]++;\n      }\n      if (isLeaderTacticsCard(card_str)){\n        G.leaders_played[ctx.currentPlayer]++;\n      }\n      var ind = G.unseen_cards.indexOf(card_str);\n      if (ind !== -1){\n        G.unseen_cards.splice(ind,1);\n      }\n      G.player_hands[ctx.currentPlayer].splice(card, 1);\n    },\n    claimFlag: {\n      move: (G, ctx, flag) => {\n        if (G.flag_statuses[flag] !== null){\n          return INVALID_MOVE;\n        }\n        let has_fog = flagHasFog(G.board_cards[flag]);\n        let has_mud = flagHasMud(G.board_cards[flag]);\n        var formations = getFormations(flag, ctx.currentPlayer, G.board_cards);\n        if (!isStrongestFormation(formations[0], formations[1], G.unseen_cards, has_fog, has_mud, G.flag_tiebreakers[flag] === ctx.currentPlayer)){\n          return INVALID_MOVE;\n        }\n        G.flag_statuses[flag] = ctx.currentPlayer;\n      },\n      noLimit: true\n    },\n    drawCard: {\n      move: (G, ctx, deck) => {\n        if (ctx.numMoves === 0){\n          return INVALID_MOVE;\n        }\n        if ((G.scout_state[0] != 0 || G.scout_state[1] != 0) && G.scout_state[0] <= G.scout_state[1]){\n          return INVALID_MOVE;\n        }\n        if (deck === 'troop' && G.troop_deck.length === 0){\n          return INVALID_MOVE;\n        }\n        if (deck === 'tactics' && G.tactics_deck.length === 0){\n          return INVALID_MOVE;\n        }\n        if (deck === 'troop'){\n          G.player_hands[ctx.currentPlayer].push(G.troop_deck.pop());\n        }\n        else if (deck === 'tactics'){\n          G.player_hands[ctx.currentPlayer].push(G.tactics_deck.pop());\n        }\n        else{\n          return INVALID_MOVE;\n        }\n        if (G.scout_state[0] != 0 || G.scout_state[1] != 0){\n          G.scout_state[1] = G.scout_state[1] + 1;\n          if (G.scout_state[0] === G.scout_state[1]){\n            G.scout_state[0] = 0;\n          }\n          return; // Don't end turn\n        }\n        ctx.events.endTurn();\n      },\n      client: false\n    },\n    passTurn: (G, ctx) => {\n      if (!canPassTurn(G, ctx)){\n        return INVALID_MOVE\n      }\n      ctx.events.endTurn();\n    }\n  },\n  playerView: (G, ctx, playerID) => {return stripSecrets(G, playerID)},\n\n  // },\n  endIf: (G, ctx) => {\n    if (IsVictory(G.flag_statuses, ctx.currentPlayer)) {\n      return { winner: ctx.currentPlayer};\n    }\n  },\n};\n\n// Return true if `cells` is in a winning configuration.\nfunction IsVictory(flag_statuses, player_id) {\n  var count = 0;\n  var count_consecutive = 0;\n  for (let i = 0; i !== 9; i++){\n    if (flag_statuses[i] === player_id){\n      count++;\n      count_consecutive++;\n    }\n    else{\n      count_consecutive = 0;\n    }\n    if (count >= 5 || count_consecutive >= 3){\n      return true;\n    }\n  }\n  return false;\n}\n\nfunction getFormations(flag, player_id, board_cards){\n  var formation = [];\n  var formation_opp = [];\n  for(let i = 0; i !== 2; i++){\n    for(let j = 0; j !== board_cards[flag][i].length; j++){\n      if(i === parseInt(player_id)){\n        if (isFormationCard(board_cards[flag][i][j])){\n          formation.push(board_cards[flag][i][j]);\n        }\n      }\n      else {\n        if (isFormationCard(board_cards[flag][i][j])){\n          formation_opp.push(board_cards[flag][i][j]);\n        }\n      }\n    }\n  }\n  return [formation, formation_opp];\n}\n\nfunction isStrongestFormation(formation, formation_opp, unseen_cards, has_fog, has_mud, tiebreaker){\n  var formation_strength = formationStrength(formation, has_fog, has_mud);\n  var formation_strength_opp = potentialFormationStrength(formation_opp, unseen_cards, has_fog, has_mud);\n  return formationStrengthComparison(formation_strength, formation_strength_opp, tiebreaker);\n}\n\nfunction formationStrengthComparison(formation_strength1, formation_strength2, tiebreaker){\n  if (FORMATION_STRENGTH_MAP.get(formation_strength1[0]) > FORMATION_STRENGTH_MAP.get(formation_strength2[0])){\n    return true;\n  }\n  else if (FORMATION_STRENGTH_MAP.get(formation_strength1[0]) < FORMATION_STRENGTH_MAP.get(formation_strength2[0])){\n    return false;\n  }\n  else if (formation_strength1[1] > formation_strength2[1]){\n    return true;\n  }\n  else if (formation_strength1[1] < formation_strength2[1]){\n    return false;\n  }\n  else{\n    return tiebreaker;\n  }\n}\n\nfunction formationStrength(formation, has_fog, has_mud){\n  let required_cards = has_mud ? 4:3;\n  if (formation.length !== required_cards){\n    return ['incomplete', 0];\n  }\n  var sum_value = sumValue(formation);\n  if (has_fog){\n    return ['sum', sum_value];\n  }\n\n  var flush_value = flushValue(formation);\n  var straight_value = straightValue(formation, has_mud);\n  var set_value = setValue(formation);\n\n  if (flush_value !== -1 && straight_value !== -1){\n    return ['straightflush', straight_value];\n  }\n  else if (set_value !== -1){\n    return ['set', set_value];\n  }\n  else if (flush_value !== -1){\n    return ['flush', flush_value];\n  }\n  else if (straight_value !== -1){\n    return ['straight', straight_value];\n  }\n  else{\n    return ['sum', sum_value];\n  }\n}\n\nfunction flushValue(formation){\n  let color = null;\n  let val = 0;\n  for (let i = 0; i !== formation.length; i++){\n    if (isTroopCard(formation[i])){\n      val += VALUE_MAP.get(formation[i][0]);\n      if (color === null){\n        color = formation[i][1];\n      }\n      else if(color !== formation[i][1]){\n        return -1;\n      }\n    }\n    else{\n      val += TACTICS_VALUE_MAP.get(formation[i])[0];\n    }\n  }\n  return val;\n}\nfunction straightValue(formation, has_mud){\n  for (let i = 0; i !== formation.length; i++){\n    if (!isTroopCard(formation[i])){\n      let vals = TACTICS_VALUE_MAP.get(formation[i]);\n      let str_orig = formation[i];\n      let highest_value = -1;\n      for (let j = 0; j !== vals.length; j++){\n        formation[i] = VALUE_MAP_REVERSE.get(vals[j]) + 'x';\n        let val = straightValue(formation, has_mud);\n        if (val > highest_value){\n          highest_value = val;\n        }\n      }\n      formation[i] = str_orig;\n      return highest_value;\n    }\n  }\n  return straightValueAux(formation, has_mud);\n}\n\nfunction straightValueAux(formation, has_mud){\n  let highest = 0;\n  for (let i = 0; i !== formation.length; i++){\n    if (VALUE_MAP.get(formation[i][0]) > highest){\n      highest = VALUE_MAP.get(formation[i][0]);\n    }\n    for (let j = i+1; j !== formation.length; j++){\n      var diff = Math.abs(VALUE_MAP.get(formation[i][0]) - VALUE_MAP.get(formation[j][0]));\n      let max_diff = has_mud ? 3:2;\n      if (diff === 0 || diff > max_diff){\n        return -1;\n      }  \n    }\n  }\n  return formation.length*(2*highest - formation.length + 1)/2;\n}\n\nfunction setValue(formation){\n  var values = new Set([1,2,3,4,5,6,7,8,9,10]);\n  for (let i = 0; i !== formation.length; i++){\n    if (isTroopCard(formation[i])){\n      values = setIntersection(values, new Set([VALUE_MAP.get(formation[i][0])]));\n    }\n    else{\n      values = setIntersection(values, new Set(TACTICS_VALUE_MAP.get(formation[i])));\n    }\n    if (values.size === 0){\n      return -1;\n    }\n  }\n  return values.values().next().value*formation.length;\n}\n\nfunction setIntersection(set1, set2){\n  return new Set([...set1].filter(x => set2.has(x)));\n}\n\nfunction sumValue(formation){\n  var sum = 0;\n  for (let i = 0; i !== formation.length; i++){\n    if (formation[i].length === 2){\n      sum += VALUE_MAP.get(formation[i][0]);\n    }\n    else{\n      sum += TACTICS_VALUE_MAP.get(formation[i])[0];\n    }\n  }\n  return sum;\n}\n\nfunction potentialFormationStrength(formation, unseen_cards, has_fog, has_mud){\n  let pot = -1;\n  if (!has_fog){\n    pot = potentialStraightFlush(formation, unseen_cards, has_mud);\n    if (pot !== -1){\n      return ['straightflush', pot];\n    }\n    pot = potentialSet(formation, unseen_cards, has_mud);\n    if (pot !== -1){\n      return ['set', pot];\n    }\n    pot = potentialFlush(formation, unseen_cards, has_mud);\n    if (pot !== -1){\n      return ['flush', pot];\n    }\n    pot = potentialStraight(formation, unseen_cards, has_mud);\n    if (pot !== -1){\n      return ['straight', pot];\n    }\n  }\n  pot = potentialSum(formation, unseen_cards, has_mud);\n  if (pot !== -1){\n    return ['sum', pot];\n  }\n  return ['incomplete', pot];\n}\n\nfunction potentialStraightFlush(formation, unseen_cards, has_mud, ind = null){\n  if (ind === null){\n    ind = unseen_cards.length;\n  }\n  let flush_value = flushValue(formation);\n  let straight_value = straightValue(formation, has_mud);\n\n  if (flush_value === -1 || straight_value === -1){\n    return -1;\n  }\n  let required_cards = has_mud ? 4:3;\n  if (formation.length === required_cards){\n    return straight_value;\n  }\n  for(let i = ind - 1; i >= 0; i--){\n    var formation_new = formation.slice();\n    var unseen_cards_new = unseen_cards.slice();\n    formation_new.push(unseen_cards[i]);\n    unseen_cards_new.splice(i, 1);\n    var pot = potentialStraightFlush(formation_new, unseen_cards_new, has_mud, i);\n    if (pot !== -1){\n      return pot;\n    }\n  }\n  return -1;\n}\nfunction potentialSet(formation, unseen_cards, has_mud, ind = null){\n  if (ind === null){\n    ind = unseen_cards.length;\n  }\n  let set_value = setValue(formation);\n\n  if (set_value === -1){\n    return -1;\n  }\n  let required_cards = has_mud ? 4:3;\n  if (formation.length === required_cards){\n      return set_value;\n  }\n  for(let i = ind - 1; i >= 0; i--){\n    var formation_new = formation.slice();\n    var unseen_cards_new = unseen_cards.slice();\n    formation_new.push(unseen_cards[i]);\n    unseen_cards_new.splice(i, 1);\n    var pot = potentialSet(formation_new, unseen_cards_new, has_mud, i);\n    if (pot !== -1){\n      return pot;\n    }\n  }\n  return -1;\n}\nfunction potentialFlush(formation, unseen_cards, has_mud, ind = null){\n  if (ind === null){\n    ind = unseen_cards.length;\n  }\n  let flush_value = flushValue(formation);\n  if (flush_value === -1){\n    return -1;\n  }\n  let required_cards = has_mud ? 4:3;\n  if (formation.length === required_cards){\n      return flush_value;\n  }\n  for(let i = ind - 1; i >= 0; i--){\n    var formation_new = formation.slice();\n    var unseen_cards_new = unseen_cards.slice();\n    formation_new.push(unseen_cards[i]);\n    unseen_cards_new.splice(i, 1);\n    var pot = potentialFlush(formation_new, unseen_cards_new, has_mud, i);\n    if (pot !== -1){\n      return pot;\n    }\n  }\n  return -1;\n}\nfunction potentialStraight(formation, unseen_cards, has_mud, ind = null){\n  if (ind === null){\n    ind = unseen_cards.length;\n  }\n  let straight_value = straightValue(formation, has_mud);\n  if (straight_value === -1){\n    return -1;\n  }\n  let required_cards = has_mud ? 4:3;\n  if (formation.length === required_cards){\n      return straight_value;\n  }\n  for(let i = ind - 1; i >= 0; i--){\n    var formation_new = formation.slice();\n    var unseen_cards_new = unseen_cards.slice();\n    formation_new.push(unseen_cards[i]);\n    unseen_cards_new.splice(i, 1);\n    var pot = potentialStraight(formation_new, unseen_cards_new, has_mud, i);\n    if (pot !== -1){\n      return pot;\n    }\n  }\n  return -1;\n}\nfunction potentialSum(formation, unseen_cards, has_mud, ind = null){\n  if (ind === null){\n    ind = unseen_cards.length;\n  }\n  let sum_value = sumValue(formation);\n  let required_cards = has_mud ? 4:3;\n  if (formation.length === required_cards){\n      return sum_value;\n  }\n  for(let i = ind - 1; i >= 0; i--){\n    var formation_new = formation.slice();\n    var unseen_cards_new = unseen_cards.slice();\n    formation_new.push(unseen_cards[i]);\n    unseen_cards_new.splice(i, 1);\n    var pot = potentialSum(formation_new, unseen_cards_new, has_mud, i);\n    if (pot !== -1){\n      return pot;\n    }\n  }\n  return -1;\n}\n\nfunction shuffle_array(arr){\n  for(let i = arr.length-1; i >= 0; i--){\n    var k = Math.floor(Math.random()*(i+1));\n    var temp = arr[k];\n    arr[k] = arr[i];\n    arr[i] = temp;\n  }\n  return arr;\n}\n\nfunction stripSecrets(G, playerID){\n  var troop_deck_stripped = new Array(G.troop_deck.length).fill(\"troop\");\n  var tactics_deck_stripped = new Array(G.tactics_deck.length).fill(\"tactics\");\n  var player_hands_stripped = [];\n  for (let i = 0; i !== 2; i++){\n    if(parseInt(playerID) === i){\n      player_hands_stripped.push(G.player_hands[i]);\n    }\n    else{\n      var opp_hand_stripped = [];\n      for (let j = 0; j !== G.player_hands[i].length; j++){\n        if (isTroopCard(G.player_hands[i][j]) || G.player_hands[i][j] === 'troop'){\n          opp_hand_stripped.push('troop');\n        }\n        else{\n          opp_hand_stripped.push('tactics');\n        }\n      }\n      player_hands_stripped.push(opp_hand_stripped);\n    }\n  }\n\n  var G_stripped = {troop_deck: troop_deck_stripped,\n                    tactics_deck: tactics_deck_stripped,\n                    player_hands: player_hands_stripped,\n                    board_cards: G.board_cards,\n                    discards: G.discards,\n                    unseen_cards: G.unseen_cards,\n                    seen_cards: G.seen_cards,\n                    flag_statuses: G.flag_statuses,\n                    flag_tiebreakers: G.flag_tiebreakers,\n                    tactics_played: G.tactics_played,\n                    leaders_played: G.leaders_played,\n                    scout_state: G.scout_state};\n  return G_stripped;\n}\n\nfunction canPlayTroopCard(board_cards, player_id, flag_statuses, hand){\n  let have_troop_card = false;\n  for (let i = 0; i !== hand.length && !have_troop_card; i++){\n    if (isTroopCard(hand[i])){\n      have_troop_card = true;\n    }\n  }\n  if (!have_troop_card){\n    return false;\n  }\n  for (let i = 0; i !== 9; i++){\n    let required_cards = flagHasMud(board_cards[i]) ? 4:3;\n    if (countFormationCards(board_cards[i][player_id]) !== required_cards && flag_statuses[i] === null){\n      return true;\n    }\n  }\n  return false;\n}\n\nexport function canPassTurn(G, ctx){\n  if (ctx.numMoves === 0){\n    return !canPlayTroopCard(G.board_cards, ctx.currentPlayer, G.flag_statuses, G.player_hands[ctx.currentPlayer]); \n  }\n  else{\n    return G.troop_deck.length === 0 && G.tactics_deck.length === 0;\n  }\n}\n\nexport function canDisplaceCard(G, ctx, card_str, displaced_card_str, player_id, flag_id){\n  if (!isFormationCard(displaced_card_str)){\n    return false;\n  }\n  if (G.flag_statuses[flag_id] !== null){\n    return false;\n  }\n  if (card_str === \"TRA\" && (player_id === ctx.currentPlayer || isTacticsCard(displaced_card_str))){\n    return false;\n  }\n  if (card_str === \"DES\" && player_id === ctx.currentPlayer){\n    return false;\n  }\n  if (card_str === \"RDP\" && player_id !== ctx.currentPlayer){\n    return false;\n  }\n  return true;\n} \n\nexport function isTroopCard(card){\n  return card.length === 2;\n}\nexport function isTacticsCard(card){\n  return card.length === 3;\n}\n\nfunction isMoraleTacticsCard(card){\n  return [\"ALX\",\"DAR\",\"CAV\",\"321\"].indexOf(card) >= 0;\n}\n\nfunction isLeaderTacticsCard(card){\n  return [\"ALX\",\"DAR\"].indexOf(card) >= 0;\n}\n\nexport function isDisplacementCard(card){\n  return [\"TRA\",\"DES\",\"RDP\"].indexOf(card) >= 0;\n}\n\nexport function isScoutCard(card){\n  return [\"SCT\"].indexOf(card) >= 0;\n}\n\nfunction isFormationCard(card){\n  return isTroopCard(card) || isMoraleTacticsCard(card);\n}\n\nfunction countFormationCards(formation){\n  let count = 0;\n  for (let i = 0; i !== formation.length; i++){\n    if (isFormationCard(formation[i])){\n      count++;\n    }\n  }\n  return count;\n}\n\nfunction flagHasFog(formations){\n  for (let i = 0; i !== 2; i++){\n    for (let j = 0; j !== formations[i].length; j++){\n      if (formations[i][j] === \"FOG\"){\n        return true;\n      }\n    }\n  }\n  return false;\n}\n\nfunction flagHasMud(formations){\n  for (let i = 0; i !== 2; i++){\n    for (let j = 0; j !== formations[i].length; j++){\n      if (formations[i][j] === \"MUD\"){\n        return true;\n      }\n    }\n  }\n  return false;\n}\n\nfunction getOpponentID(player_id){\n  if (player_id === \"0\")\n    return \"1\";\n  return \"0\";\n}","import React from 'react';\n\nvar COLOR_MAP = new Map([[\"r\",\"#FF0000\"],[\"o\",\"#FFA500\"],[\"y\",\"#FFFF00\"],[\"g\",\"#008000\"],[\"b\",\"#0000FF\"],[\"p\",\"#800080\"]]);\nvar TACTICS_FORMAT_MAP = new Map([[\"ALX\",[[\"ALEXANDER\"],6]],[\"DAR\",[[\"DARIUS\"],9]],[\"CAV\",[[\"COMPANION\",\"CAVALRY\"],6]],[\"321\",[[\"SHIELD\",\"BEARERS\"],8]],[\"TRA\",[[\"TRAITOR\"],9]],[\"DES\",[[\"DESERTER\"],7]],[\"RDP\",[[\"REDEPLOY\"],7]],[\"SCT\",[[\"SCOUT\"],9]],[\"FOG\",[[\"FOG\"],9]],[\"MUD\",[[\"MUD\"],9]]]);\n\n\nexport class Card extends React.Component {\n    constructor(props) {\n        super(props);\n        this.cardRefs = React.createRef();\n        this.height = this.props.side === 'deck' ? 120:150;\n    }\n    componentDidMount() {\n        this.updateCanvas();\n    }\n    componentDidUpdate() {\n        this.updateCanvas();\n    }\n    updateCanvas() {    \n        const ctx = this.cardRefs.current.getContext('2d');\n        ctx.clearRect(0,0, 80, this.height);\n        let translate = (this.props.side === 'top' && this.props.selected) ||  (this.props.side === 'bottom' && !this.props.selected) || this.props.side === 'deck' ? 0:30;\n        ctx.translate(0,translate);\n        if (this.props.str.length === 2){\n            drawTroopCardFront(ctx, this.props.str, null);\n        }\n        else if (this.props.str.length === 3){\n            drawTacticsCardFront(ctx, this.props.str, null);\n        }\n        else if (this.props.str === 'troop'){\n            drawTroopCardBack(ctx);\n        }\n        else if (this.props.str === 'tactics'){\n            drawTacticsCardBack(ctx);\n        }\n        ctx.translate(0,-translate);\n    }\n\n    render() {\n         return (\n             <canvas ref={this.cardRefs} width={80} height={this.height}/>\n         );\n    }\n}\n\nexport class Formation extends React.Component {\n    constructor(props) {\n        super(props);\n        this.formationRefs = React.createRef();\n    }\n    componentDidMount() {\n        this.updateCanvas();\n    }\n    componentDidUpdate() {\n        this.updateCanvas();\n    }\n    updateCanvas() {    \n        const ctx = this.formationRefs.current.getContext('2d');\n        ctx.clearRect(0,0, 80, 295);\n        if (this.props.side === 'top'){\n            ctx.translate(0,175);\n            for (let i = 0; i !== this.props.cards.length; i++){\n                if (this.props.cards[i].length === 2){\n                    drawTroopCardFront(ctx, this.props.cards[i], this.props.highlights[i]);\n                }\n                else if (this.props.cards[i].length === 3){\n                    drawTacticsCardFront(ctx, this.props.cards[i], this.props.highlights[i]);\n                }\n                ctx.translate(0,-35);\n            }\n            ctx.translate(0,-35*(5-this.props.cards.length))\n        }\n        else{\n            for (let i = 0; i !== this.props.cards.length; i++){\n                if (this.props.cards[i].length === 2){\n                    drawTroopCardFront(ctx, this.props.cards[i], this.props.highlights[i]);\n                }\n                else if (this.props.cards[i].length === 3){\n                    drawTacticsCardFront(ctx, this.props.cards[i], this.props.highlights[i]);\n                }\n                ctx.translate(0,35);\n            }\n            ctx.translate(0,-35*this.props.cards.length)\n        }\n        if (this.props.show_flag){\n            let y_offset = this.props.side === 'top' ? 35*(7-this.props.cards.length):35*this.props.cards.length;\n            drawFlag(ctx, y_offset);\n        }\n        \n    }\n\n    render() {\n         return (\n             <canvas ref={this.formationRefs} width={80} height={295}/>\n         );\n    }   \n}\n\nexport class Flag extends React.Component {\n    constructor(props) {\n        super(props);\n        this.flagRefs = React.createRef();\n    }\n    componentDidMount() {\n        this.updateCanvas();\n    }\n    componentDidUpdate() {\n        this.updateCanvas();\n    }\n    updateCanvas() {    \n        const ctx = this.flagRefs.current.getContext('2d');\n        ctx.clearRect(0,0, 80, 50);\n        if (this.props.show_flag){\n            drawFlag(ctx, 0);\n        }\n    }\n    render() {\n         return (\n             <canvas ref={this.flagRefs} width={80} height={50}/>\n         );\n    }   \n}\n\nfunction drawTroopCardFront(ctx, card_str, highlight){\n    let card_width = 80;\n    let card_height = 120;\n    let padding = 7;\n    let inset_width = 20;\n    let inset_height = 25;\n    let val = card_str[0];\n    let color = card_str[1];\n\n    if (highlight === null){\n        highlight = \"#FFFFFF\";\n    }\n    drawCardOutline(ctx, card_width, card_height, 7, highlight);\n    ctx.fillStyle = COLOR_MAP.get(color);\n    ctx.fillRect(padding, padding, card_width-2*padding, card_height-2*padding);\n    ctx.fillStyle = \"#FFFFFF\";\n    ctx.fillRect(padding, padding, inset_width, inset_height);\n    ctx.fillRect(card_width-padding-inset_width, card_height-padding-inset_height, inset_width, inset_height);\n    ctx.font = \"18px Verdana\";\n    ctx.fillStyle = \"#000000\";\n    ctx.textAlign = \"center\";\n    let lineHeight = ctx.measureText('M').width;\n    for (let i = 0; i !== 2; i++){\n        if (val !== 'T'){\n            ctx.fillText(val, padding + inset_width/2, padding + inset_height/2 + lineHeight/2 - 2); \n        }\n        else{\n            let reduce_spacing = 4;\n            let width_1 = ctx.measureText('1').width;\n            let width_0 = ctx.measureText('0').width;\n\n            ctx.fillText('1', padding + inset_width/2 - width_1/2 + reduce_spacing/2, padding + inset_height/2 + lineHeight/2 - 2); \n            ctx.fillText('0', padding + inset_width/2 + width_0/2 - reduce_spacing/2, padding + inset_height/2 + lineHeight/2 - 2);\n        }\n        if (val === '6' || val === '9'){\n            let width = ctx.measureText(val).width;\n            ctx.lineWidth = 1;\n            ctx.beginPath();\n            ctx.moveTo(padding + inset_width/2 - width/2, padding + inset_height/2 + lineHeight/2 + 1);\n            ctx.lineTo(padding + inset_width/2 + width/2, padding + inset_height/2 + lineHeight/2 + 1);\n            ctx.stroke();\n        }\n        ctx.rotate(Math.PI);\n        ctx.translate(-card_width, -card_height);\n    }\n}\n\nfunction drawTroopCardBack(ctx){\n    let card_width = 80;\n    let card_height = 120;\n    let padding = 7;\n\n    drawCardOutline(ctx, card_width, card_height, 7, \"#000000\");\n    ctx.fillStyle = \"#D2B48C\";\n    ctx.fillRect(padding, padding, card_width-2*padding, card_height-2*padding);\n\n    ctx.font = \"14px Verdana\";\n    ctx.fillStyle = \"#000000\";\n    ctx.textAlign = \"center\";\n    ctx.fillText('TROOP', card_width/2, card_height/2)\n}\n\nfunction drawTacticsCardFront(ctx, card_str, highlight){\n    let card_width = 80;\n    let card_height = 120;\n    let padding = 7;\n    let inset_width = 20;\n    let inset_height = 25;\n\n    if (highlight === null){\n        highlight = \"#FFFFFF\";\n    }\n    drawCardOutline(ctx, card_width, card_height, 7, highlight);\n    ctx.fillStyle = \"#E4DB86\";\n    ctx.fillRect(padding, padding, card_width-2*padding, card_height-2*padding);\n    ctx.fillStyle = \"#FFFFFF\";\n    ctx.fillRect(padding, padding, inset_width, inset_height);\n    ctx.fillRect(card_width-padding-inset_width, card_height-padding-inset_height, inset_width, inset_height);\n    let format = TACTICS_FORMAT_MAP.get(card_str);\n    let text = format[0];\n    let font_size = format[1];\n    drawIcon(card_str, ctx, card_width/2, card_height/2, 40, 40);\n\n    for (let i = 0; i !== 2; i++){\n        ctx.font = font_size.toString() + \"px Verdana\";\n        ctx.fillStyle = \"#000000\";\n        ctx.textAlign = \"center\";\n        let lineHeight = ctx.measureText('M').width;\n        for (let j = 0; j !== text.length; j++){\n            ctx.fillText(text[j], (card_width + inset_width)/2, (35+padding+lineHeight*text.length)/2 - lineHeight*(text.length - 1 - j));\n        }\n        drawIcon(card_str, ctx, padding + inset_width/2, padding + inset_height/2 - 2, 18, 18);\n        ctx.rotate(Math.PI);\n        ctx.translate(-card_width, -card_height);\n    }\n    if (format.length === 3){\n        format[2]();\n    }\n}\n\nfunction drawTacticsCardBack(ctx){\n    let card_width = 80;\n    let card_height = 120;\n    let padding = 7;\n\n    drawCardOutline(ctx, card_width, card_height, 7, \"#855040\");\n    ctx.fillStyle = \"#D2B48C\";\n    ctx.fillRect(padding, padding, card_width-2*padding, card_height-2*padding);\n\n    ctx.font = \"14px Verdana\";\n    ctx.fillStyle = \"#000000\";\n    ctx.textAlign = \"center\";\n    ctx.fillText('TACTICS', card_width/2, card_height/2);\n}\n\nfunction drawCardOutline(ctx, width, height, corner_radius, fill_color){\n    ctx.strokeStyle = \"#000000\";\n    ctx.fillStyle = fill_color;\n    let lineWidth = 2;\n    ctx.lineWidth = lineWidth;\n    ctx.beginPath();\n    ctx.moveTo(corner_radius+lineWidth/2, lineWidth/2);\n    ctx.lineTo(width-corner_radius-lineWidth/2, lineWidth/2);\n    ctx.arcTo(width-lineWidth/2, lineWidth/2, width-lineWidth/2, corner_radius+lineWidth/2, corner_radius+lineWidth/2);\n    ctx.lineTo(width-lineWidth/2, height-corner_radius-lineWidth/2);\n    ctx.arcTo(width-lineWidth/2, height-lineWidth/2, width-corner_radius-lineWidth/2, height-lineWidth/2, corner_radius+lineWidth/2);\n    ctx.lineTo(corner_radius+lineWidth/2, height-lineWidth/2);\n    ctx.arcTo(lineWidth/2, height-lineWidth/2, lineWidth/2, corner_radius+lineWidth/2, corner_radius+lineWidth/2);\n    ctx.lineTo(lineWidth/2, corner_radius+lineWidth/2);\n    ctx.arcTo(lineWidth/2, lineWidth/2, corner_radius+lineWidth/2, lineWidth/2, corner_radius+lineWidth/2);\n    ctx.closePath();\n    ctx.fill();\n    ctx.stroke();\n}\n\nfunction drawFlag(ctx, y_offset){\n    var img = document.getElementById(\"flag\");\n    ctx.drawImage(img, 15, y_offset, 50, 50);\n}\n\nfunction drawIcon(card_str, ctx, x, y, width, height) {\n    if (card_str === \"ALX\" || card_str === \"DAR\"){\n        drawLeaderIcon(ctx, x, y, width, height);\n    }\n    else if (card_str === \"CAV\"){\n        drawCompanionCavalryIcon(ctx, x, y, height);\n    }\n    else if (card_str === \"321\"){\n        drawShieldBearersIcon(ctx, x, y, width, height);\n    }\n    else if (card_str === \"TRA\"){\n        drawTraitorIcon(ctx, x, y, width, height);\n    }\n    else if (card_str === \"DES\"){\n        drawDeserterIcon(ctx, x, y, width, height);\n    }\n    else if (card_str === \"RDP\"){\n        drawRedeployIcon(ctx, x, y, width, height);\n    }\n    else if (card_str === \"SCT\"){\n        drawScoutIcon(ctx, x, y, width, height);\n    }\n    else if (card_str === \"MUD\"){\n        drawMudIcon(ctx, x, y, height);\n    }\n    else if (card_str === \"FOG\"){\n        drawFogIcon(ctx, x, y, height);\n    }\n}\n\nfunction drawLeaderIcon(ctx, x, y, width, height){\n    ctx.strokeStyle = \"#000000\";\n    ctx.fillStyle = \"#000000\";\n    let lineWidth = 1;\n    ctx.lineWidth = lineWidth;\n    width = 0.9*width-4;\n    height = 0.9*height;\n    let b1 = [x-width/3,y+height/2];\n    let b2 = [x+width/3,y+height/2];\n    let p1 = [x-width/2,y-height/2+2];\n    let p2 = [x,y-height/2+2];\n    let p3 = [x+width/2,y-height/2+2];\n    let v1 = [x-width/6,y];\n    let v2 = [x+width/6,y];\n    ctx.beginPath();\n    ctx.moveTo(b1[0], b1[1]);\n    ctx.lineTo(p1[0], p1[1]);\n    ctx.lineTo(v1[0], v1[1]);\n    ctx.lineTo(p2[0], p2[1]);\n    ctx.lineTo(v2[0], v2[1]);\n    ctx.lineTo(p3[0], p3[1]);\n    ctx.lineTo(b2[0], b2[1]);\n    ctx.lineTo(b1[0], b1[1]);\n    ctx.closePath();\n    ctx.fill();\n    ctx.stroke();\n}\n\nfunction drawCompanionCavalryIcon(ctx, x, y, height){\n    ctx.font = height.toString()+\"px Verdana\";\n    ctx.fillStyle = \"#000000\";\n    ctx.textAlign = \"center\";\n    let lineHeight = ctx.measureText('M').width;\n    let text = \"8\";\n    let offset = height < 30 ? 0:7;\n    ctx.fillText(text, x, y + lineHeight/2 - offset);\n}\n\nfunction drawShieldBearersIcon(ctx, x, y, width, height){\n    ctx.font = (height/2).toString()+\"px Verdana\";\n    ctx.fillStyle = \"#000000\";\n    ctx.textAlign = \"center\";\n    let lineHeight = ctx.measureText('M').width;\n    let text = \"321\";\n    let offset = height < 30 ? 0:7;\n    ctx.fillText(text, x, y + lineHeight/2 - offset);\n}\n\nfunction drawTraitorIcon(ctx, x, y, width, height){\n    ctx.strokeStyle = \"#000000\";\n    ctx.fillStyle = \"#000000\";\n    let lineWidth = 1;\n    ctx.lineWidth = lineWidth;\n    width = 0.4*width-4;\n    height = 0.9*height;\n    let p1 = [x-0.2*width,y-height/2+2];\n    let p2 = [x+0.2*width,y-height/2+2];\n    let p3 = [x+0.2*width,y+height/2-width];\n    let p4 = [x+width,y+height/2-width];\n    let p5 = [x,y+height/2];\n    let p6 = [x-width,y+height/2-width];\n    let p7 = [x-0.2*width,y+height/2-width];\n    ctx.beginPath();\n    ctx.moveTo(p1[0], p1[1]);\n    ctx.lineTo(p2[0], p2[1]);\n    ctx.lineTo(p3[0], p3[1]);\n    ctx.lineTo(p4[0], p4[1]);\n    ctx.lineTo(p5[0], p5[1]);\n    ctx.lineTo(p6[0], p6[1]);\n    ctx.lineTo(p7[0], p7[1]);\n    ctx.fill();\n    ctx.stroke();\n}\n\nfunction drawDeserterIcon(ctx, x, y, width, height){\n    ctx.strokeStyle = \"#000000\";\n\n    width = 0.7*width-4;\n    height = 0.9*height;\n    let lineWidth = height/5;\n    ctx.lineWidth = lineWidth;\n    let p1 = [x-width/2,y-height/2+2];\n    let p2 = [x+width/2,y-height/2+2];\n    let p3 = [x-width/2,y+height/2];\n    let p4 = [x+width/2,y+height/2];\n\n    ctx.beginPath();\n    ctx.moveTo(p1[0], p1[1]);\n    ctx.lineTo(p4[0], p4[1]);\n    ctx.moveTo(p2[0], p2[1]);\n    ctx.lineTo(p3[0], p3[1]);\n    ctx.stroke();\n}\n\nfunction drawRedeployIcon(ctx, x, y, width, height){\n    ctx.strokeStyle = \"#000000\";\n    ctx.fillStyle = \"#000000\";\n    let lineWidth = 1;\n    ctx.lineWidth = lineWidth;\n    height = 0.4*height-4;\n    width = 0.9*width-4;\n    let p1 = [x-width/2,y-0.2*height];\n    let p2 = [x-width/2,y+0.2*height];\n    let p3 = [x+width/2-height,y+0.2*height];\n    let p4 = [x+width/2-height,y+height];\n    let p5 = [x+width/2,y];\n    let p6 = [x+width/2-height,y-height];\n    let p7 = [x+width/2-height,y-0.2*height];\n    ctx.beginPath();\n    ctx.moveTo(p1[0], p1[1]);\n    ctx.lineTo(p2[0], p2[1]);\n    ctx.lineTo(p3[0], p3[1]);\n    ctx.lineTo(p4[0], p4[1]);\n    ctx.lineTo(p5[0], p5[1]);\n    ctx.lineTo(p6[0], p6[1]);\n    ctx.lineTo(p7[0], p7[1]);\n    ctx.fill();\n    ctx.stroke();\n}\n\nfunction drawScoutIcon(ctx, x, y, width, height){\n    ctx.strokeStyle = \"#000000\";\n    ctx.fillStyle = \"#000000\";\n\n    width = 0.9*width-4;\n    height = width*0.5;\n    let lineWidth = 1;\n    ctx.lineWidth = lineWidth;\n\n    let k = (Math.pow(height/2,2)-Math.pow(width/2,2))/height;\n    let r = Math.sqrt(Math.pow(width/2,2)+Math.pow(k,2));\n    let alpha = Math.atan(k*2/width);\n\n    ctx.beginPath();\n    ctx.moveTo(x+width/2,y);\n    ctx.arc(x, y-k, r, alpha, Math.PI-alpha, true);\n    ctx.arc(x, y+k, r, Math.PI+alpha,-alpha, true);\n    ctx.stroke();\n\n    ctx.beginPath();\n    ctx.moveTo(x+height*0.2, y);\n    ctx.arc(x, y, height*0.2, 0, 2 * Math.PI, false);\n    ctx.stroke();\n    ctx.fill();\n\n    ctx.beginPath();\n    ctx.moveTo(x+height*0.5,y);\n    ctx.arc(x, y, height*0.5, 0, 2 * Math.PI, false);\n    ctx.stroke();\n}\n\nfunction drawFogIcon(ctx, x, y, height){\n    ctx.font = height.toString()+\"px Verdana\";\n    ctx.fillStyle = \"#000000\";\n    ctx.textAlign = \"center\";\n    let lineHeight = ctx.measureText('M').width;\n    let text = \"#\";\n    let offset = height < 30 ? 0:7;\n    ctx.fillText(text, x, y + lineHeight/2 - offset);\n}\n\nfunction drawMudIcon(ctx, x, y, height){\n    ctx.font = height.toString()+\"px Verdana\";\n    ctx.fillStyle = \"#000000\";\n    ctx.textAlign = \"center\";\n    let lineHeight = ctx.measureText('M').width;\n    let text = \"+\";\n    let offset = height < 30 ? 0:7;\n    ctx.fillText(text, x, y + lineHeight/2 - offset);\n}","import React from 'react';\nimport {Card, Formation, Flag} from './BoardComponents'\nimport {canPassTurn, isDisplacementCard, isScoutCard, canDisplaceCard, isTroopCard, isTacticsCard} from './Game'\n\nexport class BattleLineBoard extends React.Component {\n  constructor(props) {\n    super(props);\n    this.selected_card = null;\n    this.displaced_card = null;\n  }\n  onClickCard(player_id, card_id) {\n    if (this.props.ctx.currentPlayer !== player_id || this.props.ctx.currentPlayer !== this.props.playerID){\n      return;\n    }\n    if (this.selected_card !== card_id){\n      this.selected_card = card_id;\n      this.displaced_card = null;\n      this.forceUpdate();\n    }\n    else{\n      this.selected_card = null;\n      this.displaced_card = null;\n      this.forceUpdate();\n    }\n  }\n  onClickSlot(player_id, flag_id, event) {\n    if (this.selected_card === null){\n      return;\n    }\n    let card_str = this.props.G.player_hands[this.props.ctx.currentPlayer][this.selected_card];\n    if (isDisplacementCard(card_str) && flag_id !== -1){\n      let rect = event.target.getBoundingClientRect();\n      let y_offset = player_id === '0' ? rect.bottom - event.clientY : event.clientY - rect.top;\n      let n_cards = this.props.G.board_cards[flag_id][player_id].length;\n\n      let boundary_y = 0;\n      for (let i = 0; i !== n_cards; i++){\n        let incr_y = (i !== n_cards - 1) ? 35:120;\n        boundary_y += incr_y;\n        if (y_offset < boundary_y){\n          let displaced_card_str = this.props.G.board_cards[flag_id][player_id][i];\n          if(canDisplaceCard(this.props.G, this.props.ctx, card_str, displaced_card_str, player_id, flag_id)){\n            let new_displaced_card = [flag_id, player_id, i];\n            if (this.displaced_card === null){\n              this.displaced_card = new_displaced_card;\n              this.forceUpdate();\n              return;\n            }\n            else if (arraysEqual(this.displaced_card, new_displaced_card)){\n              this.displaced_card = null;\n              this.forceUpdate();\n              return;\n            }\n            else{\n              break;\n            }\n          }\n          break;\n        }\n      }\n    }\n    if (isDisplacementCard(card_str)){\n      if (this.props.ctx.currentPlayer !== player_id && card_str !== \"DES\"){\n        return;\n      }\n      if (this.displaced_card === null){\n        return;\n      }\n      this.props.moves.playCard(this.selected_card, flag_id, this.displaced_card);\n      this.selected_card = null;\n      this.displaced_card = null;\n      this.forceUpdate();\n    }\n    else if (isScoutCard(card_str)){\n      if (flag_id === -1){\n        this.props.moves.playCard(this.selected_card, flag_id);\n        this.selected_card = null;\n        this.displaced_card = null;\n        this.forceUpdate();\n      }\n      else{\n        return;\n      }\n    }\n    else{\n      if (this.props.ctx.currentPlayer !== player_id){\n        return;\n      }\n      if (flag_id === -1){\n        return;\n      }\n      this.props.moves.playCard(this.selected_card, flag_id);\n      this.selected_card = null;\n      this.displaced_card = null;\n      this.forceUpdate();\n    }\n  }\n  onClickFlag(flag_id){\n    this.props.moves.claimFlag(flag_id);\n  }\n  onClickDeck(deck_name){\n    if (this.selected_card !== null){\n      let card_str = this.props.G.player_hands[this.props.ctx.currentPlayer][this.selected_card];\n      if (isScoutCard(card_str)){\n        this.props.moves.playCard(this.selected_card, -1);\n        this.selected_card = null;\n        this.displaced_card = null;\n        this.forceUpdate();\n      }\n      else if ((isTroopCard(card_str) && deck_name == \"troop\") || (isTacticsCard(card_str) && deck_name == \"tactics\")){\n        this.props.moves.playCard(this.selected_card, -1);\n        this.selected_card = null;\n        this.displaced_card = null;\n        this.forceUpdate();\n      }\n    }\n    this.props.moves.drawCard(deck_name);\n  }\n  onClickPass(){\n    this.props.moves.passTurn();\n  }\n  render() {\n    let tbody = [];\n\n    let cells = [];\n    let text_display = '';\n\n    if (this.props.ctx.gameover !== undefined && this.props.ctx.gameover.winner === '0'){\n      text_display = 'Winner!'\n    }\n    else if (this.props.ctx.currentPlayer === '0'){\n      text_display = 'Your turn!'\n    }\n    cells.push(\n        <td key ={cells.length} style={{textAlign: 'center'}}>\n          {text_display}\n        </td>\n    );\n    for (let i = 0; i < this.props.G.player_hands[0].length; i++) {\n      cells.push(\n        <td key={cells.length} onClick={() => this.onClickCard('0', i)}>\n          <Card str={this.props.G.player_hands[0][i]} side={'top'} selected={i===this.selected_card && this.props.ctx.currentPlayer==='0' && this.props.playerID==='0' && (this.props.ctx.numMoves===0 || (this.props.G.scout_state[1] > 0 && this.props.G.scout_state[0] === 0))}/>\n        </td>\n      );\n    }\n    for (let i = 0; i !== 9 - this.props.G.player_hands[0].length; i++){\n      cells.push(\n        <td key={cells.length}></td>\n      );\n    }\n    let highlights = [new Array(this.props.G.discards[0].length).fill(null), new Array(this.props.G.discards[1].length).fill(null)];\n    if (this.props.G.discards[0].length > 0 && this.props.G.discards[0].slice(-1)[0] === this.props.G.seen_cards.slice(-1)[0] && this.props.playerID !== '0'){\n      highlights[0][this.props.G.discards[0].length-1] = \"#000000\";\n    }\n    if (this.props.G.discards[1].length > 0 && this.props.G.discards[1].slice(-1)[0] === this.props.G.seen_cards.slice(-1)[0] && this.props.playerID !== '1'){\n      highlights[1][this.props.G.discards[1].length-1] = \"#000000\";\n    }\n    cells.push(\n      <td rowSpan=\"5\" key={cells.length}>\n        <table id=\"tactics_deck\" style={{margin:'auto'}}>\n          <tbody>\n            <tr>\n              <td onClick={(event) => this.onClickSlot('0',-1,event)}>\n                <Formation cards={this.props.G.discards[0]} side={'top'} show_flag={false} highlights={highlights[0]}/>\n              </td>\n            </tr>\n            <tr>\n              <td onClick={() => this.onClickDeck('tactics')}>\n                <Card str={this.props.G.tactics_deck.length>0 ? this.props.G.tactics_deck[0]:''} side={'deck'}/>\n              </td>\n            </tr>\n            <tr>\n              <td onClick={(event) => this.onClickSlot('1',-1,event)}>\n                <Formation cards={this.props.G.discards[1]} side={'bottom'} show_flag={false} highlights={highlights[1]}/>\n              </td>\n            </tr>\n          </tbody>\n        </table>\n      </td>\n    );\n    tbody.push(<tr key={tbody.length}>{cells}</tr>);\n    cells = [];\n    let pass_display = new Array(2).fill('none');\n    for (let i = 0; i !== 2; i++){\n      if (this.props.ctx.currentPlayer === this.props.playerID && this.props.ctx.currentPlayer === i.toString() && canPassTurn(this.props.G, this.props.ctx)){\n        pass_display[i] = 'block';\n      }\n    }\n    cells.push(\n      <td rowSpan=\"3\" key={cells.length}>\n        <table id=\"troop_deck\" style={{margin:'auto'}}>\n          <tbody>\n            <tr>\n              <td style={{height:'50px'}}>\n                <input type=\"button\" value=\"Pass\" style={{margin:'auto',display:pass_display[0]}} onClick={() => this.onClickPass()}/>\n              </td>\n            </tr>\n            <tr>\n              <td style={{height:'120px'}} onClick={() => this.onClickDeck('troop')}>\n                <Card str={this.props.G.troop_deck.length>0 ? this.props.G.troop_deck[0]:''} side={'deck'}/>\n              </td>\n            </tr>\n            <tr>\n              <td style={{height:'50px'}}>\n                <input type=\"button\" value=\"Pass\" style={{margin:'auto',display:pass_display[1]}} onClick={() => this.onClickPass()}/>\n              </td>\n            </tr>\n          </tbody>\n        </table>\n      </td>\n    );\n\n    for (let i = 0; i < 9; i++) {\n      let cards = this.props.G.board_cards[i][0];\n      let show_flag = this.props.G.flag_statuses[i]==='0';\n      let highlights = new Array(cards.length).fill(null);\n      let last_played = cards.length > 0 && cards.slice(-1)[0] === this.props.G.seen_cards.slice(-1)[0] && this.props.playerID !== '0';\n      if (last_played){\n        highlights[cards.length-1] = \"#000000\";\n      }\n      if (this.displaced_card !== null && this.displaced_card[0] === i && this.displaced_card[1] === '0'){\n        highlights[this.displaced_card[2]] = \"#AAAAAA\";\n      }\n      cells.push(\n        <td key={cells.length} onClick={(event) => this.onClickSlot('0', i, event)}>\n          <Formation cards={cards} side={'top'} show_flag={show_flag} highlights={highlights}/>\n        </td>\n      );\n    }\n\n    tbody.push(<tr key={tbody.length}>{cells}</tr>);\n    cells = [];\n\n    for (let i = 0; i < 9; i++) {\n      cells.push(\n        <td key={cells.length} onClick={() => this.onClickFlag(i)}>\n          <Flag show_flag={this.props.G.flag_statuses[i]===null}/>\n        </td>\n      );\n    }\n    tbody.push(<tr key={tbody.length}>{cells}</tr>);\n    cells = [];\n\n    for (let i = 0; i < 9; i++) {\n      let cards = this.props.G.board_cards[i][1];\n      let show_flag = this.props.G.flag_statuses[i]==='1';\n      let highlights = new Array(cards.length).fill(null);\n      let last_played = cards.length > 0 && cards.slice(-1)[0] === this.props.G.seen_cards.slice(-1)[0] && this.props.playerID !== '1';\n      if (last_played){\n        highlights[cards.length-1] = \"#000000\";\n      } \n      if (this.displaced_card !== null && this.displaced_card[0] === i && this.displaced_card[1] === '1'){\n        highlights[this.displaced_card[2]] = \"#AAAAAA\";\n      }\n      cells.push(\n        <td key={cells.length} onClick={(event) => this.onClickSlot('1',i,event)}>\n          <Formation cards={cards} side={'bottom'} show_flag={show_flag} highlights={highlights}/>\n        </td>\n      );\n    }\n    tbody.push(<tr key={tbody.length}>{cells}</tr>);\n    cells = [];\n    text_display = '';\n    if (this.props.ctx.gameover !== undefined && this.props.ctx.gameover.winner === '1'){\n      text_display = 'Winner!'\n    }\n    else if (this.props.ctx.currentPlayer === '1'){\n      text_display = 'Your turn!'\n    }\n    cells.push(\n        <td key={cells.length} style={{textAlign: 'center'}}>\n          {text_display}\n        </td>\n    );\n    for (let i = 0; i < this.props.G.player_hands[1].length; i++) {\n      cells.push(\n        <td key={cells.length} onClick={() => this.onClickCard('1',i)}>\n          <Card str={this.props.G.player_hands[1][i]} side={'bottom'} selected={i===this.selected_card && this.props.ctx.currentPlayer==='1' && this.props.playerID==='1' && (this.props.ctx.numMoves===0 || (this.props.G.scout_state[1] > 0 && this.props.G.scout_state[0] === 0))}/>\n        </td>\n      );\n    }\n    tbody.push(<tr key={tbody.length}>{cells}</tr>);\n    return (\n      <div>\n        <table id=\"board\" style={{margin:\"auto\"}}>\n          <tbody>{tbody}</tbody>\n        </table>\n      </div>\n    );\n  }\n}\n\nfunction arraysEqual(arr1, arr2){\n  if (arr1 === null && arr2 === null){\n    return true;\n  }\n  if (arr1 === null || arr2 === null){\n    return false;\n  }\n  if (arr1.length !== arr2.length){\n    return false;\n  }\n  for (let i = 0; i !== arr1.length; i++){\n    if (arr1[i] !== arr2[i]){\n      return false;\n    }\n  }\n  return true;\n}","import React from 'react';\nimport { Lobby } from 'boardgame.io/react';\n\nexport class BattleLineLobby extends Lobby{\n    handleChangeName(event){\n        this.setState({\n            playerName: event.target.value,\n        });\n    }\n    handleNewMatch(event){\n        this._createMatch('battle-line', 2);\n    }\n    handleRefreshMatches(event){\n        this._updateConnection();\n    }\n    handleJoinMatch(event, matchID, playerID){\n        this._joinMatch('battle-line', matchID, playerID);\n    }\n    handleLeaveMatch(event, matchID){\n        this._leaveMatch('battle-line', matchID);\n    }\n    handleEnterLobby(event){\n        this._enterLobby(this.state.playerName);\n    }\n    handleExitLobby(event){\n        this._exitLobby();\n    }\n    handleStartMatch(event, matchID, playerID){\n        this._startMatch('battle-line', {numPlayers: 2, matchID: matchID, playerID: playerID});\n    }\n    handleExitMatch(event){\n        this._exitMatch();\n    }\n    render(){\n        var matches_thead = [];\n        var matches_th = [];\n\n        const match_id_col_style = {\n            width:\"150px\",\n            textAlign: 'center',\n            padding: '3px'\n        }\n        const player_name_col_style = {\n            width:\"150px\",\n            textAlign: 'center',\n            padding: '3px'\n        }\n        const vs_col_style = {\n            width:\"30px\",\n            textAlign: 'center',\n            padding: '3px'\n        }\n        const button_col_style = {\n            width:\"100px\",\n            textAlign: 'center',\n            padding: '3px'\n        }\n\n        matches_th.push(<th style={match_id_col_style}>{'Match ID'}</th>);\n        matches_th.push(<th style={player_name_col_style}>{'Player 1'}</th>);\n        matches_th.push(<th style={vs_col_style}>{'vs.'}</th>);\n        matches_th.push(<th style={player_name_col_style}>{'Player 2'}</th>);\n        matches_th.push(<th style={button_col_style}><input type=\"button\" value=\"New Match\" onClick={(event) => this.handleNewMatch(event)}/></th>);\n        matches_th.push(<th style={button_col_style}><input type=\"button\" value=\"Refresh\" onClick={(event) => this.handleRefreshMatches(event)}/></th>);\n        matches_thead.push(<tr>{matches_th}</tr>);\n\n        var matches_tbody = [];\n        for (var i = 0; i !== this.connection.matches.length; i++){\n            var matches_row = [];\n            let match = this.connection.matches[i];\n            var player1_name = (match.players.length > 0) ? match.players[0].name:undefined;\n            var player2_name = (match.players.length > 1) ? match.players[1].name:undefined;\n\n            matches_row.push(<td style={match_id_col_style}>{match.matchID}</td>);\n            if (player1_name !== undefined){\n                matches_row.push(<td style={player_name_col_style}>{player1_name}</td>);\n            }\n            else{\n                matches_row.push(<td style={player_name_col_style}><input type=\"button\" value=\"Join\" onClick={(event) => this.handleJoinMatch(event, match.matchID, \"0\")}/></td>);\n            }\n            matches_row.push(<td style={vs_col_style}>{'vs.'}</td>);\n            if (player2_name !== undefined){\n                matches_row.push(<td style={player_name_col_style}>{player2_name}</td>);\n            }\n            else{\n                matches_row.push(<td style={player_name_col_style}><input type=\"button\" value=\"Join\" onClick={(event) => this.handleJoinMatch(event, match.matchID, \"1\")}/></td>);\n            }    \n\n            if (player1_name === this.state.playerName || player2_name === this.state.playerName){\n                matches_row.push(<td style={button_col_style}><input type=\"button\" value=\"Leave\" onClick={(event) => this.handleLeaveMatch(event, match.matchID)}/></td>);\n            }\n            else{\n                matches_row.push(<td style={button_col_style}></td>);\n            }\n            if((player1_name === this.state.playerName && player2_name !== undefined) || (player2_name === this.state.playerName && player1_name !== undefined)){\n                let playerID = this.state.playerName === player1_name ? '0':'1';\n                matches_row.push(<td style={button_col_style}><input type=\"button\" value=\"Play\" onClick={(event) => this.handleStartMatch(event, match.matchID, playerID)}/></td>);\n            }\n            else{\n                matches_row.push(<td style={button_col_style}></td>);\n            }\n            matches_tbody.push(<tr>{matches_row}</tr>);\n        }\n\n        // var errMsg = this.state.errorMsg !== '' ? 'Error: ' + this.state.errorMsg:'';\n\n        if (this.state.phase === 'enter'){\n            return (\n                <div>\n                    {'Enter name: '}\n                    <input type=\"text\" value={this.state.playerName} onChange={(event) => this.handleChangeName(event)}/>\n                    <input type=\"button\" value=\"Enter Lobby\" onClick={(event) => this.handleEnterLobby(event)}/>\n                </div>\n            );\n        }\n        else if (this.state.phase === 'list'){\n            return (\n                <div>\n                    <input type=\"button\" value=\"Exit Lobby\" onClick={(event) => this.handleExitLobby(event)}/>\n                    <br></br>\n                    <table id=\"matches\">\n                        <thead>\n                            {matches_thead}\n                        </thead>\n                        <tbody>\n                            {matches_tbody}\n                        </tbody>\n                    </table>\n                </div>\n            );\n        }\n        else if (this.state.phase === 'play'){\n            var board_element = React.createElement(this.state.runningMatch.app, {\n                matchID: this.state.runningMatch.matchID,\n                playerID: this.state.runningMatch.playerID,\n                credentials: this.state.runningMatch.credentials\n            });\n            return (\n                <div>\n                    {board_element}\n                </div>\n            );\n        }\n\n    }\n}","import React from 'react';\n\nexport class Header extends React.Component {\n    render() {\n        return (\n            <div>\n                <table style={{width:\"100%\"}} bgcolor=\"#E4DB86\">\n                    <tbody>\n                        <tr>\n                            <td style={{fontFamily:\"Verdana\", fontSize:\"30px\",padding:\"10px\"}}>\n                                <a href=\"https://rsandzimier.github.io/battleline/\" style={{color:\"inherit\", textDecoration:\"none\"}}>\n                                    BATTLE LINE (TEST)\n                                </a>\n                            </td>\n                            <td style={{textAlign:\"right\"}}>\n                                <a href=\"https://github.com/rsandzimier/battleline\">\n                                    <img id=\"github\" src=\"https://raw.githubusercontent.com/rsandzimier/battleline/master/github_logo.png\" style={{height:\"50px\"}} alt=\"Github logo\"/>\n                                </a>\n                            </td>\n                        </tr>\n                    </tbody>\n                </table><br></br>\n            </div>\n        );\n    }\n}","import React from 'react';\nimport { Client } from 'boardgame.io/react';\nimport { SocketIO } from 'boardgame.io/multiplayer';\nimport { BattleLine } from './Game';\nimport { BattleLineBoard } from './Board';\nimport { BattleLineLobby } from './Lobby';\nimport { Header } from './Header';\n\nconst BattleLineClient = Client({\n  game: BattleLine,\n  board: BattleLineBoard,\n  // ONLINE:\n  multiplayer: SocketIO({ server: 'https://battleline-backend.onrender.com' }),\n  // LOCAL:\n  // multiplayer: SocketIO({ server: 'localhost:8000' }),\n  // END\n});\n\n// ONLINE:\nconst App = () => (\n  <div>\n    <Header/>\n    <BattleLineLobby\n    gameServer={'https://battleline-backend.onrender.com'}\n    lobbyServer={'https://battleline-backend.onrender.com'}\n    gameComponents={[{game: BattleLine, board: BattleLineBoard}]}\n    />\n  </div>\n)\n\n// LOCAL:\n// const App = () => (\n//   <div>\n//     <Header/>\n//     <BattleLineClient/>\n//   </div>\n// )\n// END\n\nexport default App;","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}